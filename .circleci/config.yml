version: 2.1

executors:
  docker-executor:
    docker:
      - image: cimg/base:stable
    working_directory: ~/project

jobs:
  build:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Compose services
          command: |
            docker-compose build
            docker save $(docker image ls billing_backend -q) -o backend.tar
            docker save $(docker image ls html_frontend -q) -o frontend.tar
      - persist_to_workspace:
          root: ~/project
          paths:
            - backend.tar
            - frontend.tar

  test:
    executor: docker-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - setup_remote_docker
      - run:
          name: Load Docker images
          command: |
            docker load -i ~/project/backend.tar
            docker load -i ~/project/frontend.tar
      - run:
          name: Start services with docker-compose
          command: docker-compose up -d
      - run:
          name: Run integration tests
          command: echo "Run your Selenium or API tests here"

  push:
    executor: docker-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - setup_remote_docker
      - run:
          name: Load Docker images
          command: |
            docker load -i ~/project/backend.tar
            docker load -i ~/project/frontend.tar
      - run:
          name: Tag and push backend to ACR
          command: |
            echo $AZURE_PASSWORD | docker login $ACR_NAME.azurecr.io -u $AZURE_USERNAME --password-stdin
            docker tag billing_backend $ACR_NAME.azurecr.io/billing_backend:latest
            docker push $ACR_NAME.azurecr.io/billing_backend:latest
      - run:
          name: Tag and push frontend to ACR
          command: |
            docker tag html_frontend $ACR_NAME.azurecr.io/html_frontend:latest
            docker push $ACR_NAME.azurecr.io/html_frontend:latest

workflows:
  build_test_push:
    jobs:
      - build
      - test:
          requires:
            - build
      - push:
          requires:
            - test
