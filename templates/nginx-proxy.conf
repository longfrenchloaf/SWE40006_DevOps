# nginx-proxy.conf (on your local machine, in your frontend project folder)

server {
    listen 80; # Ensure Nginx listens on port 80 inside the container
    listen [::]:80; # Listen on IPv6 as well

    # This block serves your static files for any path NOT matched by subsequent location blocks
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm; # Add index files if needed
        # Essential for SPAs - if a file isn't found, serve index.html so client-side routing works
        try_files $uri $uri/ /index.html;
    }

    # --- Reverse proxy configuration for the backend /menu API ---
    # This block matches requests for the exact path /menu (and potentially /menu/ if it's a directory)
    # Based on your Flask code, the API endpoint is at /menu
    location /menu {
        # Proxy requests to the internal backend service name and port
        # Use http://backend-service:5000 as that's the internal Kubernetes address
        proxy_pass http://backend-service:5000;

        # Optional: Add headers that might be useful for the backend
        proxy_set_header Host $host; # Pass the original Host header
        proxy_set_header X-Real-IP $remote_addr; # Pass the client's real IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Append client IP
        proxy_set_header X-Forwarded-Proto $scheme; # Pass the original protocol (http/https)

        # You might need CORS headers if your browser considers the API call cross-origin,
        # although since it's proxied through the same origin, it often isn't necessary *at the Nginx layer*.
        # add_header 'Access-Control-Allow-Origin' '*' always;
        # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always; # Add other methods like POST for billing
        # add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
    }
    # -----------------------------------------------------

    # If your frontend JS also calls a /billing API:
    location /billing {
         proxy_pass http://backend-service:5000;
         proxy_set_header Host $host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header X-Forwarded-Proto $scheme;
         # Optional CORS headers again if needed
    }


    # Error pages if needed
    # error_page   404              /404.html; # Keep if you have this file

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}